{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "QBO Institute - API Library",
        "description": "API para el registro de librerías",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [{
            "name": "Library's",
            "description": "API for users of QBO Institute ©copyright"
        }],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/api/librerias/": {
            "post": {
                "tags": [
                    "library"
                ],
                "summary": "Create a new Library",
                "description": "Create a new Library",
                "operationId": "addPet",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                        "name": "Nombre",
                        "in": "x-www-form-urlencoded",
                        "description": "Nombre de la librería",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Direccion",
                        "in": "x-www-form-urlencoded",
                        "description": "Dirección de la librería",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "Telefono",
                        "in": "x-www-form-urlencoded",
                        "description": "Teléfono de la librería",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Library Success",
                        "schema": {
                            "$ref": "#/definitions/Libreria"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [{
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }]
            },
            "put": {
                "tags": [
                    "library"
                ],
                "summary": "Update an existing library",
                "description": "",
                "operationId": "updatePet",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [{
                        "in": "body",
                        "name": "body",
                        "description": "Pet object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }]
            },
            "get": {
                "tags": [
                    "library"
                ],
                "summary": "Obtener todas las librerias registradas",
                "description": "",
                "operationId": "selectLibrary",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Library not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }]
            }
        },
        "/api/librerias/{id}": {
            "get": {
                "tags": [
                    "library"
                ],
                "summary": "Get library by ID",
                "description": "Multiple status values can be provided with comma separated strings",
                "operationId": "findLibraryByID",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [{
                        "name": "status",
                        "in": "query",
                        "description": "Status values that need to be considered for filter",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ],
                            "default": "available"
                        },
                        "collectionFormat": "multi"
                    }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pet"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [{
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }]
            },
            "delete": {
                "tags": [
                    "library"
                ],
                "summary": "Finds Pets by status",
                "description": "Multiple status values can be provided with comma separated strings",
                "operationId": "findPetsByStatus",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [{
                        "name": "status",
                        "in": "query",
                        "description": "Status values that need to be considered for filter",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ],
                            "default": "available"
                        },
                        "collectionFormat": "multi"
                    }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pet"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [{
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }]
            }
        }
    },
    "securityDefinitions": {
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "Libreria": {
            "properties": {
                "IDLibreria": {
                    "type": "int"
                },
                "Nombre": {
                    "type": "string"
                },
                "Telefono": {
                    "type": "string"
                },
                "Direccion": {
                    "type": "string"
                }
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}
